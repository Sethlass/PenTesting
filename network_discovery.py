# network_discovery.py

from scapy.all import IP, ICMP, sr1
import ipaddress

def network_discovery(network):
    """
    Discover live hosts in a given network using ICMP (ping) requests.

    Args:
        network (str): The network address in CIDR format or a single IP (e.g., '192.168.1.0/24').

    Returns:
        list: A list of dictionaries containing the IP addresses of live hosts.
    """
    try:
        # Convert network string to a network object
        network = ipaddress.ip_network(network, strict=False)
    except ValueError as e:
        print(f"Invalid network format: {e}")
        return []

    live_hosts = []

    # Iterate over each host in the network
    for ip in network.hosts():
        print(f"Pinging {ip}...")
        # Send an ICMP echo request (ping)
        response = sr1(IP(dst=str(ip))/ICMP(), timeout=1, verbose=False)
        if response:
            live_hosts.append({'ip': str(ip)})
            print(f"Host {ip} is live.")

    return live_hosts

if __name__ == "__main__":
    network = input("Enter the network in CIDR format (e.g., 192.168.1.0/24): ")
    hosts = network_discovery(network)
    if hosts:
        print(f"Found {len(hosts)} live hosts:")
        for host in hosts:
            print(f"IP: {host['ip']}")
    else:
        print("No live hosts found.")
